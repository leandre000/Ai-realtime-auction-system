-- Drop existing tables if they exist
DROP TABLE IF EXISTS transaction_notifications;
DROP TABLE IF EXISTS transactions;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS watchlist_auctions;
DROP TABLE IF EXISTS watchlists;
DROP TABLE IF EXISTS auction_categories;
DROP TABLE IF EXISTS auction_tags;
DROP TABLE IF EXISTS bid;
DROP TABLE IF EXISTS auction;
DROP TABLE IF EXISTS addresses;
DROP TABLE IF EXISTS wallet;
DROP TABLE IF EXISTS persons;

-- Create tables
CREATE TABLE persons
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(100),
    email      VARCHAR(255),
    password   VARCHAR(255),
    enabled    BOOLEAN                                 NOT NULL,
    role       VARCHAR(255)                            NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    last_login TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_persons PRIMARY KEY (id)
);

CREATE TABLE addresses
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    street      VARCHAR(255)                            NOT NULL,
    city        VARCHAR(255)                            NOT NULL,
    state       VARCHAR(255)                            NOT NULL,
    country     VARCHAR(255)                            NOT NULL,
    postal_code VARCHAR(255)                            NOT NULL,
    user_id     BIGINT,
    CONSTRAINT pk_addresses PRIMARY KEY (id)
);

CREATE TABLE wallet
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id            BIGINT                                  NOT NULL,
    balance            DOUBLE PRECISION                        NOT NULL,
    status             VARCHAR(255)                            NOT NULL,
    verification_level VARCHAR(255)                            NOT NULL,
    created_at         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_wallet PRIMARY KEY (id)
);

CREATE TABLE auction
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title             VARCHAR(100),
    description       VARCHAR(1000),
    starting_price    DOUBLE PRECISION                        NOT NULL,
    current_price     DOUBLE PRECISION                        NOT NULL,
    start_time        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    end_time          TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    created_at        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    status            VARCHAR(255)                            NOT NULL,
    seller_id         BIGINT                                  NOT NULL,
    current_bidder_id BIGINT,
    CONSTRAINT pk_auction PRIMARY KEY (id)
);

CREATE TABLE auction_categories
(
    auction_id  BIGINT NOT NULL,
    category_id BIGINT NOT NULL,
    CONSTRAINT pk_auction_categories PRIMARY KEY (auction_id, category_id)
);

CREATE TABLE auction_tags
(
    auction_id BIGINT NOT NULL,
    tag_id     BIGINT NOT NULL,
    CONSTRAINT pk_auction_tags PRIMARY KEY (auction_id, tag_id)
);

CREATE TABLE bid
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    amount     DOUBLE PRECISION                        NOT NULL,
    timestamp  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    auction_id BIGINT                                  NOT NULL,
    bidder_id  BIGINT                                  NOT NULL,
    CONSTRAINT pk_bid PRIMARY KEY (id)
);

CREATE TABLE watchlists
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id    BIGINT                                  NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_watchlists PRIMARY KEY (id)
);

CREATE TABLE watchlist_auctions
(
    watchlist_id BIGINT NOT NULL,
    auction_id   BIGINT NOT NULL,
    CONSTRAINT pk_watchlist_auctions PRIMARY KEY (watchlist_id, auction_id)
);

CREATE TABLE reviews
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    rating     INTEGER                                 NOT NULL,
    comment    VARCHAR(1000),
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    reviewer_id BIGINT                                 NOT NULL,
    reviewed_id BIGINT                                 NOT NULL,
    CONSTRAINT pk_reviews PRIMARY KEY (id)
);

CREATE TABLE transactions
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    wallet_id        BIGINT                                  NOT NULL,
    amount           DOUBLE PRECISION                        NOT NULL,
    type             VARCHAR(255)                            NOT NULL,
    status           VARCHAR(255)                            NOT NULL,
    description      VARCHAR(255)                            NOT NULL,
    timestamp        TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    reference_id     VARCHAR(255),
    transaction_hash VARCHAR(255),
    error_message    VARCHAR(255),
    CONSTRAINT pk_transactions PRIMARY KEY (id)
);

CREATE TABLE transaction_notifications
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    transaction_id BIGINT                                  NOT NULL,
    user_id        BIGINT                                  NOT NULL,
    message        VARCHAR(255)                            NOT NULL,
    read           BOOLEAN                                 NOT NULL,
    created_at     TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_transaction_notifications PRIMARY KEY (id)
);

-- Add constraints
ALTER TABLE addresses
    ADD CONSTRAINT uc_addresses_user UNIQUE (user_id);

ALTER TABLE persons
    ADD CONSTRAINT uc_persons_email UNIQUE (email);

ALTER TABLE wallet
    ADD CONSTRAINT uc_wallet_user UNIQUE (user_id);

ALTER TABLE addresses
    ADD CONSTRAINT FK_ADDRESSES_ON_USER FOREIGN KEY (user_id) REFERENCES persons (id);

ALTER TABLE auction
    ADD CONSTRAINT FK_AUCTION_ON_CURRENT_BIDDER FOREIGN KEY (current_bidder_id) REFERENCES persons (id);

ALTER TABLE auction
    ADD CONSTRAINT FK_AUCTION_ON_SELLER FOREIGN KEY (seller_id) REFERENCES persons (id);

ALTER TABLE auction_categories
    ADD CONSTRAINT FK_AUCTION_CATEGORIES_ON_AUCTION FOREIGN KEY (auction_id) REFERENCES auction (id);

ALTER TABLE auction_tags
    ADD CONSTRAINT FK_AUCTION_TAGS_ON_AUCTION FOREIGN KEY (auction_id) REFERENCES auction (id);

ALTER TABLE bid
    ADD CONSTRAINT FK_BID_ON_AUCTION FOREIGN KEY (auction_id) REFERENCES auction (id);

ALTER TABLE bid
    ADD CONSTRAINT FK_BID_ON_BIDDER FOREIGN KEY (bidder_id) REFERENCES persons (id);

ALTER TABLE watchlists
    ADD CONSTRAINT FK_WATCHLISTS_ON_USER FOREIGN KEY (user_id) REFERENCES persons (id);

ALTER TABLE watchlist_auctions
    ADD CONSTRAINT FK_WATCHLIST_AUCTIONS_ON_WATCHLIST FOREIGN KEY (watchlist_id) REFERENCES watchlists (id);

ALTER TABLE watchlist_auctions
    ADD CONSTRAINT FK_WATCHLIST_AUCTIONS_ON_AUCTION FOREIGN KEY (auction_id) REFERENCES auction (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_REVIEWER FOREIGN KEY (reviewer_id) REFERENCES persons (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_REVIEWED FOREIGN KEY (reviewed_id) REFERENCES persons (id);

ALTER TABLE transactions
    ADD CONSTRAINT FK_TRANSACTIONS_ON_WALLET FOREIGN KEY (wallet_id) REFERENCES wallet (id);

ALTER TABLE transaction_notifications
    ADD CONSTRAINT FK_TRANSACTION_NOTIFICATIONS_ON_TRANSACTION FOREIGN KEY (transaction_id) REFERENCES transactions (id);

ALTER TABLE transaction_notifications
    ADD CONSTRAINT FK_TRANSACTION_NOTIFICATIONS_ON_USER FOREIGN KEY (user_id) REFERENCES persons (id);

ALTER TABLE wallet
    ADD CONSTRAINT FK_WALLET_ON_USER FOREIGN KEY (user_id) REFERENCES persons (id);